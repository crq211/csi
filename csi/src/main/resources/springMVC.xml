<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <!-- 只扫描控制器 -->
    <!--<context:component-scan base-package="com.company" use-default-filters="false">-->
        <!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
    <!--</context:component-scan>-->

    <context:component-scan base-package="com.company.csi.controller" />

    <!-- 配置视图解析器 InternalResourceViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 两个基本的mvc配置 -->
    <!-- 将springMVC不能处理的请求交给tomcat -->
    <mvc:default-servlet-handler/>
    <!-- 能支持更高级的功能,比如JSR303校验，快捷的ajax -->
    <mvc:annotation-driven/>

    <!-- 开启对AOP注解的支持 -->
    <!--<aop:aspectj-autoproxy proxy-target-class="true" />-->


    <mvc:resources mapping="/config/static/**" location="/static/" />

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 上传的最大限制 -->
        <property name="maxUploadSize" value="209715200"/>
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="UTF-8"/>
        <!-- 上传文件的解析 -->
        <property name="resolveLazily" value="true"/>
    </bean>

    <!--启用shiro注解 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>